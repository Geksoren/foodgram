version: '3.3'

services:
  db:
    image: postgres:13.0-alpine
    container_name: foodgram-db
    environment:
      POSTGRES_DB: foodgram
      POSTGRES_USER: foodgram_user
      POSTGRES_PASSWORD: foodgram_password
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always

  backend:
    container_name: foodgram-backend
    build:
      context: ../backend
      dockerfile: Dockerfile
    volumes:
      - ../backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      - db
    restart: always

  frontend:
    container_name: foodgram-front
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend:/app/result_build
    restart: always

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - backend
      - frontend
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:
